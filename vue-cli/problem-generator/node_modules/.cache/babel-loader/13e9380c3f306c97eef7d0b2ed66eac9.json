{"remainingRequest":"/home/jacob/problem-generator/vue-cli/problem-generator/node_modules/babel-loader/lib/index.js!/home/jacob/problem-generator/vue-cli/problem-generator/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jacob/problem-generator/vue-cli/problem-generator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jacob/problem-generator/vue-cli/problem-generator/src/components/BinaryOperatorInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jacob/problem-generator/vue-cli/problem-generator/src/components/BinaryOperatorInput.vue","mtime":1603149626464},{"path":"/home/jacob/problem-generator/vue-cli/problem-generator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jacob/problem-generator/vue-cli/problem-generator/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jacob/problem-generator/vue-cli/problem-generator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jacob/problem-generator/vue-cli/problem-generator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aCI7Ci8vCi8vCi8vCi8vCmltcG9ydCB7IFNRUlRfS0VZLCBTUVJUX1NZTSwgRXhwciB9IGZyb20gJy4uL2xpYi9leHByLmpzJzsKdmFyIEZMT0FUX0lORiA9IDFlMTA7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQmluYXJ5T3BlcmF0b3JJbnB1dCcsCiAgcHJvcHM6IFsicm9vdCIsICJyb3ciLCAiY29sIiwgImRhdGEiLCAib3AiLCAiY2hhcnQiLCAiYSIsICJiIl0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJfYW5zd2VyOiAiIgogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJvb3QuYW5zd2VyX2lucHV0c1t0aGlzLiR2bm9kZS5rZXldID0gdGhpczsKCiAgICBpZiAodGhpcy5yb3cgPT0gdGhpcy5jaGFydC5yYW5nZV9zdGFydCgpICYmIHRoaXMuY29sID09IHRoaXMuY2hhcnQucmFuZ2Vfc3RhcnQoKSkgewogICAgICB2YXIgaWQgPSB0aGlzLnJvb3QuZ2V0X2lucHV0X2lkKDAsIDApOwogICAgICB2YXIgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7CiAgICAgIGlmIChlbCkgZWwuZm9jdXMoKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBpbnB1dF90eXBlOiBmdW5jdGlvbiBpbnB1dF90eXBlKCkgewogICAgICBzd2l0Y2ggKHRoaXMub3ApIHsKICAgICAgICBjYXNlICJ0cmlnIjoKICAgICAgICAgIHJldHVybiAidGV4dCI7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZXR1cm4gIm51bWJlciI7CiAgICAgIH0KICAgIH0sCiAgICB0YWJsZV9lbmQ6IGZ1bmN0aW9uIHRhYmxlX2VuZCgpIHsKICAgICAgcmV0dXJuIHRoaXMucm9vdC50YWJsZV9sZW4gLSB0aGlzLmNoYXJ0LnJhbmdlX3N0YXJ0KCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXRfaGludDogZnVuY3Rpb24gc2V0X2hpbnQoKSB7CiAgICAgIGlmICghdGhpcy5yb290LmhpbnQpIHJldHVybjsKICAgICAgdGhpcy5yb290LmhpbnQudXBkYXRlKHRoaXMuYSwgdGhpcy5iKTsKICAgIH0sCiAgICBjbGVhcl9oaW50OiBmdW5jdGlvbiBjbGVhcl9oaW50KCkgewogICAgICBpZiAoIXRoaXMucm9vdC5oaW50KSByZXR1cm47CiAgICAgIHRoaXMucm9vdC5oaW50LnVwZGF0ZShudWxsLCBudWxsKTsKICAgIH0sCiAgICBnZXRfY2w6IGZ1bmN0aW9uIGdldF9jbCgpIHsKICAgICAgcmV0dXJuICJiaW5hcnktb3BlcmF0b3ItaW5wdXQiICsgKHRoaXMuYW5zd2VyX2lzX2NvcnJlY3QoKSAmJiAhdGhpcy5pc19mdWxsX3NxKHRoaXMudXNlcl9hbnN3ZXIpICYmIHRoaXMudXNlcl9hbnN3ZXIgIT09ICIiID8gIiBtYXJrLWNvcnJlY3QiIDogdGhpcy5hbnN3ZXJfaXNfY29ycmVjdCgpICYmIHRoaXMuaXNfZnVsbF9zcSh0aGlzLnVzZXJfYW5zd2VyKSA/ICIgbWFyay1jb3JyZWN0LXNxIiA6IHRoaXMuaXNfaG90KCkgPyAiIG1hcmstaG90IiA6IHRoaXMuaXNfY29sZCgpICYmIHRoaXMudXNlcl9hbnN3ZXIgIT09ICIiID8gIiBtYXJrLWNvbGQiIDogIiIpOwogICAgfSwKICAgIGlzX2hvdDogZnVuY3Rpb24gaXNfaG90KCkgewogICAgICByZXR1cm4gdGhpcy51c2VyX2Fuc3dlciAtIHRoaXMuZGF0YSA8PSB0aGlzLmRhdGEgKiAwLjMgJiYgdGhpcy51c2VyX2Fuc3dlciA+IHRoaXMuZGF0YTsKICAgIH0sCiAgICBpc19jb2xkOiBmdW5jdGlvbiBpc19jb2xkKCkgewogICAgICByZXR1cm4gdGhpcy5kYXRhIC0gdGhpcy51c2VyX2Fuc3dlciA8PSB0aGlzLmRhdGEgKiAwLjMgJiYgdGhpcy51c2VyX2Fuc3dlciA8IHRoaXMuZGF0YTsKICAgIH0sCiAgICBhbnN3ZXJfaXNfY29ycmVjdDogZnVuY3Rpb24gYW5zd2VyX2lzX2NvcnJlY3QoKSB7CiAgICAgIGlmICh0eXBlb2YgdGhpcy51c2VyX2Fuc3dlciA9PT0gInVuZGVmaW5lZCIgfHwgIXRoaXMudXNlcl9hbnN3ZXIubGVuZ3RoKSByZXR1cm4gZmFsc2U7CiAgICAgIGlmICh0aGlzLnVzZXJfYW5zd2VyLnRvTG93ZXJDYXNlKCkgPT0gIm5hbiIgJiYgaXNOYU4odGhpcy5kYXRhKSkgcmV0dXJuIHRydWU7CiAgICAgIGlmICh0aGlzLnVzZXJfYW5zd2VyLnRvTG93ZXJDYXNlKCkgPT0gIi1pbmYiICYmIHRoaXMuZGF0YSA9PSAtSW5maW5pdHkpIHJldHVybiB0cnVlOwogICAgICBpZiAodGhpcy51c2VyX2Fuc3dlci50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoImluZiIpICYmICh0aGlzLmRhdGEgPT0gSW5maW5pdHkgfHwgTWF0aC5hYnModGhpcy5kYXRhKSA+IEZMT0FUX0lORikpIHJldHVybiB0cnVlOwogICAgICBjb25zb2xlLmxvZygidXNlciBhbnN3ZXIiLCB0aGlzLnVzZXJfYW5zd2VyLCAicmVhbCBhbnN3ZXIiLCB0aGlzLmRhdGEsICJlcHMiLCB0aGlzLnJvb3QuZmxvYXRfZXBzKTsKCiAgICAgIGlmICh0aGlzLm9wICE9ICJ0cmlnIiAmJiB0aGlzLm9wICE9ICJsb2ciKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudXNlcl9hbnN3ZXIgPT0gdGhpcy5kYXRhOwogICAgICB9CgogICAgICB2YXIgdmFsID0gbnVsbDsKCiAgICAgIHRyeSB7CiAgICAgICAgdmFyIGV4cHIgPSBuZXcgRXhwcih0aGlzLnVzZXJfYW5zd2VyKTsKICAgICAgICB2YWwgPSBleHByLmV2YWwoKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgdmFyIHJlcyA9IE1hdGguYWJzKHZhbCAtIHRoaXMuZGF0YSkgPD0gdGhpcy5yb290LmZsb2F0X2VwczsKICAgICAgcmV0dXJuIHJlczsKICAgIH0sCiAgICBpc19mdWxsX3NxOiBmdW5jdGlvbiBpc19mdWxsX3NxKG4pIHsKICAgICAgcmV0dXJuIE1hdGguc3FydChuKSAlIDEgPT09IDA7CiAgICB9LAogICAgZ2V0X25leHQ6IGZ1bmN0aW9uIGdldF9uZXh0KCkgewogICAgICB2YXIgcm93ID0gdGhpcy5yb3c7CiAgICAgIHZhciBjb2wgPSB0aGlzLmNvbDsKCiAgICAgIHN3aXRjaCAodGhpcy5yb290Lm9yZGVyKSB7CiAgICAgICAgY2FzZSAiUm93IjoKICAgICAgICAgIGNvbCsrOwoKICAgICAgICAgIGlmIChjb2wgPiB0aGlzLnRhYmxlX2VuZCkgewogICAgICAgICAgICBjb2wgPSAwOwogICAgICAgICAgICByb3crKzsKICAgICAgICAgIH0KCiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiRGlhZ29uYWwiOgogICAgICAgICAgcm93Kys7CiAgICAgICAgICBjb2wrKzsKCiAgICAgICAgICBpZiAoY29sID4gdGhpcy50YWJsZV9lbmQgfHwgcm93ID4gdGhpcy50YWJsZV9lbmQpIHsKICAgICAgICAgICAgdmFyIGRpYWcgPSByb3cgLSBjb2w7CiAgICAgICAgICAgIGRpYWcgPSBkaWFnID49IDAgPyAtZGlhZyAtIDEgOiAtZGlhZzsKCiAgICAgICAgICAgIGlmIChkaWFnIDwgMCkgewogICAgICAgICAgICAgIHJvdyA9IDA7CiAgICAgICAgICAgICAgY29sID0gcm93IC0gZGlhZzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBjb2wgPSAwOwogICAgICAgICAgICAgIHJvdyA9IGRpYWcgKyBjb2w7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiUmFuZG9tIjoKICAgICAgICAgIGNvbnNvbGUubG9nKCJSYW5kb20iKTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5yb290LmdldF9pbnB1dF9pZChyb3csIGNvbCkpOwogICAgfSwKICAgIGhhbmRsZV9pbnB1dDogZnVuY3Rpb24gaGFuZGxlX2lucHV0KGUpIHsKICAgICAgc3dpdGNoIChlLmRhdGEpIHsKICAgICAgICBjYXNlIFNRUlRfS0VZOgogICAgICAgICAgdGhpcy51c2VyX2Fuc3dlciA9IHRoaXMudXNlcl9hbnN3ZXIucmVwbGFjZShTUVJUX0tFWSwgU1FSVF9TWU0pOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIHRoaXMuY2hlY2tfYW5zd2VyKCk7CiAgICB9LAogICAgY2hlY2tfYW5zd2VyOiBmdW5jdGlvbiBjaGVja19hbnN3ZXIoKSB7CiAgICAgIGlmICh0aGlzLmFuc3dlcl9pc19jb3JyZWN0KCkpIHsKICAgICAgICB0aGlzLnJvb3QuY2hlY2tfYWxsKCk7CgogICAgICAgIGlmICh0aGlzLnJvb3QuaGludCkgewogICAgICAgICAgdGhpcy5yb290LmhpbnQuaGFuZGxlX3N1Y2Nlc3MoKTsKICAgICAgICB9CgogICAgICAgIHZhciBlbCA9IHRoaXMuZ2V0X25leHQoKTsKICAgICAgICBpZiAoZWwpIGVsLmZvY3VzKCk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["BinaryOperatorInput.vue"],"names":[],"mappings":";;;;;;;AAMA,SAAA,QAAA,EAAA,QAAA,EAAA,IAAA,QAAA,gBAAA;AAEA,IAAA,SAAA,GAAA,IAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,GAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,IAAA,CAAA,aAAA,CAAA,KAAA,MAAA,CAAA,GAAA,IAAA,IAAA;;AACA,QAAA,KAAA,GAAA,IAAA,KAAA,KAAA,CAAA,WAAA,EAAA,IAAA,KAAA,GAAA,IAAA,KAAA,KAAA,CAAA,WAAA,EAAA,EACA;AACA,UAAA,EAAA,GAAA,KAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,UAAA,EAAA,GAAA,QAAA,CAAA,cAAA,CAAA,EAAA,CAAA;AACA,UAAA,EAAA,EACA,EAAA,CAAA,KAAA;AACA;AACA,GAjBA;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,cAAA,KAAA,EAAA;AAEA,aAAA,MAAA;AAAA,iBAAA,MAAA;;AACA;AAAA,iBAAA,QAAA;AAHA;AAKA,KAPA;AAQA,IAAA,SARA,uBAQA;AACA,aAAA,KAAA,IAAA,CAAA,SAAA,GAAA,KAAA,KAAA,CAAA,WAAA,EAAA;AACA;AAVA,GAlBA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,IAAA,EACA;AACA,WAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA;AACA,KALA;AAMA,IAAA,UANA,wBAMA;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,IAAA,EACA;AACA,WAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA;AACA,KAVA;AAWA,IAAA,MAXA,oBAWA;AACA,aAAA,2BAAA,KAAA,iBAAA,MAAA,CAAA,KAAA,UAAA,CAAA,KAAA,WAAA,CAAA,IAAA,KAAA,WAAA,KAAA,EAAA,GAAA,eAAA,GAAA,KAAA,iBAAA,MAAA,KAAA,UAAA,CAAA,KAAA,WAAA,CAAA,GAAA,kBAAA,GAAA,KAAA,MAAA,KAAA,WAAA,GAAA,KAAA,OAAA,MAAA,KAAA,WAAA,KAAA,EAAA,GAAA,YAAA,GAAA,EAAA,CAAA;AACA,KAbA;AAcA,IAAA,MAdA,oBAcA;AACA,aAAA,KAAA,WAAA,GAAA,KAAA,IAAA,IAAA,KAAA,IAAA,GAAA,GAAA,IAAA,KAAA,WAAA,GAAA,KAAA,IAAA;AACA,KAhBA;AAiBA,IAAA,OAjBA,qBAiBA;AACA,aAAA,KAAA,IAAA,GAAA,KAAA,WAAA,IAAA,KAAA,IAAA,GAAA,GAAA,IAAA,KAAA,WAAA,GAAA,KAAA,IAAA;AACA,KAnBA;AAoBA,IAAA,iBApBA,+BAoBA;AACA,UAAA,OAAA,KAAA,WAAA,KAAA,WAAA,IAAA,CAAA,KAAA,WAAA,CAAA,MAAA,EACA,OAAA,KAAA;AACA,UAAA,KAAA,WAAA,CAAA,WAAA,MAAA,KAAA,IAAA,KAAA,CAAA,KAAA,IAAA,CAAA,EACA,OAAA,IAAA;AACA,UAAA,KAAA,WAAA,CAAA,WAAA,MAAA,MAAA,IAAA,KAAA,IAAA,IAAA,CAAA,QAAA,EACA,OAAA,IAAA;AACA,UAAA,KAAA,WAAA,CAAA,WAAA,GAAA,UAAA,CAAA,KAAA,MAAA,KAAA,IAAA,IAAA,QAAA,IACA,IAAA,CAAA,GAAA,CAAA,KAAA,IAAA,IAAA,SADA,CAAA,EAEA,OAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,WAAA,EAAA,aAAA,EAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,IAAA,CAAA,SAAA;;AACA,UAAA,KAAA,EAAA,IAAA,MAAA,IAAA,KAAA,EAAA,IAAA,KAAA,EAAA;AACA,eAAA,KAAA,WAAA,IAAA,KAAA,IAAA;AACA;;AACA,UAAA,GAAA,GAAA,IAAA;;AACA,UACA;AACA,YAAA,IAAA,GAAA,IAAA,IAAA,CAAA,KAAA,WAAA,CAAA;AACA,QAAA,GAAA,GAAA,IAAA,CAAA,IAAA,EAAA;AACA,OAJA,CAKA,OAAA,CAAA,EACA;AACA,eAAA,KAAA;AACA;;AAEA,UAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,CAAA,SAAA;AACA,aAAA,GAAA;AACA,KA/CA;AAgDA,IAAA,UAhDA,sBAgDA,CAhDA,EAgDA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA,KAlDA;AAmDA,IAAA,QAnDA,sBAmDA;AACA,UAAA,GAAA,GAAA,KAAA,GAAA;AACA,UAAA,GAAA,GAAA,KAAA,GAAA;;AACA,cAAA,KAAA,IAAA,CAAA,KAAA;AACA,aAAA,KAAA;AACA,UAAA,GAAA;;AACA,cAAA,GAAA,GAAA,KAAA,SAAA,EACA;AACA,YAAA,GAAA,GAAA,CAAA;AACA,YAAA,GAAA;AACA;;AACA;;AACA,aAAA,UAAA;AACA,UAAA,GAAA;AACA,UAAA,GAAA;;AACA,cAAA,GAAA,GAAA,KAAA,SAAA,IAAA,GAAA,GAAA,KAAA,SAAA,EACA;AACA,gBAAA,IAAA,GAAA,GAAA,GAAA,GAAA;AACA,YAAA,IAAA,GAAA,IAAA,IAAA,CAAA,GAAA,CAAA,IAAA,GAAA,CAAA,GAAA,CAAA,IAAA;;AACA,gBAAA,IAAA,GAAA,CAAA,EAAA;AACA,cAAA,GAAA,GAAA,CAAA;AACA,cAAA,GAAA,GAAA,GAAA,GAAA,IAAA;AACA,aAHA,MAIA;AACA,cAAA,GAAA,GAAA,CAAA;AACA,cAAA,GAAA,GAAA,IAAA,GAAA,GAAA;AACA;AACA;;AACA;;AACA,aAAA,QAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA;AA5BA;;AA8BA,aAAA,QAAA,CAAA,cAAA,CAAA,KAAA,IAAA,CAAA,YAAA,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;AACA,KArFA;AAsFA,IAAA,YAtFA,wBAsFA,CAtFA,EAsFA;AACA,cAAA,CAAA,CAAA,IAAA;AAEA,aAAA,QAAA;AACA,eAAA,WAAA,GAAA,KAAA,WAAA,CAAA,OAAA,CAAA,QAAA,EAAA,QAAA,CAAA;AACA;AAJA;;AAOA,WAAA,YAAA;AACA,KA/FA;AAgGA,IAAA,YAhGA,0BAgGA;AACA,UAAA,KAAA,iBAAA,EAAA,EACA;AACA,aAAA,IAAA,CAAA,SAAA;;AACA,YAAA,KAAA,IAAA,CAAA,IAAA,EACA;AACA,eAAA,IAAA,CAAA,IAAA,CAAA,cAAA;AACA;;AACA,YAAA,EAAA,GAAA,KAAA,QAAA,EAAA;AACA,YAAA,EAAA,EACA,EAAA,CAAA,KAAA;AACA;AAEA;AA7GA;AA9BA,CAAA","sourcesContent":["<template>\n\t<input  :class=\"get_cl()\" :id=\"root.get_input_id(row,col)\" type=\"input_type\" v-model=\"user_answer\"\n\t@input=\"handle_input\" @focus=\"set_hint()\" @focusout=\"clear_hint()\" inputmode=\"decimal\" />\n</template>\n<script>\n\nimport {SQRT_KEY, SQRT_SYM, Expr} from '../lib/expr.js';\n\nconst FLOAT_INF = 1e10;\n\nexport default {\n\tname: 'BinaryOperatorInput',\n\tprops: [\"root\", \"row\", \"col\", \"data\", \"op\", \"chart\", \"a\", \"b\"],\n\t\tdata() {\n\t\treturn {\n\t\t\tuser_answer: \"\"\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.root.answer_inputs[this.$vnode.key] = this;\n\t\tif (this.row == this.chart.range_start() && this.col == this.chart.range_start())\n\t\t{\n\t\t\tlet id = this.root.get_input_id(0, 0);\n\t\t\tlet el = document.getElementById(id);\n\t\t\tif (el)\n\t\t\t\tel.focus();\n\t\t}\n\t},\n\tcomputed: {\n\t\tinput_type() {\n\t\t\tswitch (this.op)\n\t\t\t{\n\t\t\t\tcase \"trig\": return \"text\";\n\t\t\t\tdefault: return \"number\";\n\t\t\t}\n\t\t},\n\t\ttable_end() {\n\t\t\treturn this.root.table_len - this.chart.range_start()\n\t\t}\n\t},\n\tmethods: {\n\t\tset_hint() {\n\t\t\tif (!this.root.hint)\n\t\t\t\treturn;\n\t\t\tthis.root.hint.update(this.a, this.b);\n\t\t},\n\t\tclear_hint() {\n\t\t\tif (!this.root.hint)\n\t\t\t\treturn;\n\t\t\tthis.root.hint.update(null, null);\n\t\t},\n\t\tget_cl() {\n\t\t\treturn \"binary-operator-input\" + (this.answer_is_correct() && !this.is_full_sq(this.user_answer) && this.user_answer !== \"\" ? \" mark-correct\" : this.answer_is_correct() && this.is_full_sq(this.user_answer)  ? \" mark-correct-sq\" : this.is_hot() ? \" mark-hot\" : this.is_cold() && this.user_answer !== \"\" ? \" mark-cold\" : \"\");\n\t\t},\n\t\tis_hot() {\n\t\t\treturn(this.user_answer - this.data <= this.data * 0.3 && this.user_answer > this.data);\n\t\t},\n\t\tis_cold() {\n\t\t\treturn(this.data - this.user_answer <= this.data * 0.3 && this.user_answer < this.data);\n\t\t},\n\t\tanswer_is_correct() {\n\t\t\tif (typeof this.user_answer === \"undefined\" || !this.user_answer.length)\n\t\t\t\treturn false;\n\t\t\tif (this.user_answer.toLowerCase() == \"nan\" && isNaN(this.data)) \n\t\t\t\treturn true;\n\t\t\tif (this.user_answer.toLowerCase() == \"-inf\" && (this.data == -Infinity))\n\t\t\t\treturn true;\n\t\t\tif (this.user_answer.toLowerCase().startsWith(\"inf\") && (this.data == Infinity ||\n\t\t\t\t\t\tMath.abs(this.data) > FLOAT_INF))\n\t\t\t\treturn true;\n\t\t\tconsole.log(\"user answer\", this.user_answer, \"real answer\", this.data, \"eps\", this.root.float_eps);\n\t\t\tif (this.op != \"trig\" && this.op != \"log\") {\n\t\t\t\treturn this.user_answer == this.data;\n\t\t\t}\n\t\t\tlet val = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet expr = new Expr(this.user_answer);\n\t\t\t\tval = expr.eval();\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet res = Math.abs(val - this.data) <= this.root.float_eps;\n\t\t\treturn res;\n\t\t},\n\t\tis_full_sq(n) {\n\t\t\treturn Math.sqrt(n) % 1 === 0\n\t\t},\n\t\tget_next() {\n\t\t\tlet row = this.row;\n\t\t\tlet col = this.col;\n\t\t\tswitch (this.root.order) {\n\t\t\t\tcase \"Row\":\n\t\t\t\t\tcol++;\n\t\t\t\t\tif (col > this.table_end)\n\t\t\t\t\t{\n\t\t\t\t\t\tcol = 0;\n\t\t\t\t\t\trow++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Diagonal\":\n\t\t\t\t\trow++;\n\t\t\t\t\tcol++;\n\t\t\t\t\tif (col > this.table_end || row > this.table_end)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet diag = row - col;\n\t\t\t\t\t\tdiag = (diag >= 0) ? -diag-1 : -diag;\n\t\t\t\t\t\tif (diag < 0) {\n\t\t\t\t\t\t\trow = 0;\n\t\t\t\t\t\t\tcol = row - diag;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcol = 0;\n\t\t\t\t\t\t\trow = diag + col;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Random\":\n\t\t\t\t\tconsole.log(\"Random\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn document.getElementById(this.root.get_input_id(row, col));\n\t\t},\n\t\thandle_input(e) {\n\t\t\tswitch (e.data)\n\t\t\t{\n\t\t\t\tcase SQRT_KEY:\n\t\t\t\t\tthis.user_answer = this.user_answer.replace(SQRT_KEY, SQRT_SYM);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.check_answer();\n\t\t},\n\t\tcheck_answer() {\n\t\t\tif (this.answer_is_correct())\n\t\t\t{\n\t\t\t\tthis.root.check_all();\n\t\t\t\tif (this.root.hint)\n\t\t\t\t{\n\t\t\t\t\tthis.root.hint.handle_success();\n\t\t\t\t}\n\t\t\t\tlet el = this.get_next();\n\t\t\t\tif (el)\n\t\t\t\t\tel.focus();\n\t\t\t}\n\n\t\t}\n\t}\n}\n</script>\n"],"sourceRoot":"src/components"}]}